{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","siteTitle","get","this","siteDescription","posts","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","props","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","lang","meta","name","content","title","map","_ref","node","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"4OAQMA,4FAGJC,OAAA,WACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAkBF,IACtBC,KACA,4CAEIE,EAAQH,IAAIC,KAAM,sCAExB,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUP,KAAKQ,MAAMD,UAC3BJ,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEM,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASb,IACvCc,MAAOjB,IAERI,EAAMc,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNH,EAAQhB,IAAImB,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACEjB,EAAAC,EAAAC,cAAA,OAAKgB,IAAKH,EAAKC,OAAOC,MACpBjB,EAAAC,EAAAC,cAAA,MACEiB,MAAO,CACLC,aAAcC,YAAO,OAGvBrB,EAAAC,EAAAC,cAACoB,EAAA,KAAD,CAAMH,MAAO,CAAEI,UAAW,QAAUC,GAAIT,EAAKC,OAAOC,MACjDL,IAGLZ,EAAAC,EAAAC,cAAA,aAAQa,EAAKU,YAAYC,MACzB1B,EAAAC,EAAAC,cAAA,KAAGyB,wBAAyB,CAAEC,OAAQb,EAAKc,mBAhCjCC,IAAMC,WAyCftC,YAER,IAAMuC,EAAS","file":"component---src-pages-index-js-c110bc187808e5c583f8.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/layout'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n\n\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}